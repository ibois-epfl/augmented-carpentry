<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classAIAC_1_1Config" kind="class" language="C++" prot="public">
    <compoundname>AIAC::Config</compoundname>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classAIAC_1_1Config_1a6406543adaedb33e3f7f784a1fe08734" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SEC_AIAC</definition>
        <argsstring></argsstring>
        <name>SEC_AIAC</name>
        <qualifiedname>AIAC::Config::SEC_AIAC</qualifiedname>
        <initializer>= &quot;AIAC&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="47" column="37" bodyfile="src/AIAC/Config.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1add563d383e00f3f23a148d4d8e373c94" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::CAM_ID</definition>
        <argsstring></argsstring>
        <name>CAM_ID</name>
        <qualifiedname>AIAC::Config::CAM_ID</qualifiedname>
        <initializer>= &quot;CamID&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="49" column="37" bodyfile="src/AIAC/Config.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a79dc12d6fb8baab67e184db7c524a48e" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::CAM_PARAMS_FILE</definition>
        <argsstring></argsstring>
        <name>CAM_PARAMS_FILE</name>
        <qualifiedname>AIAC::Config::CAM_PARAMS_FILE</qualifiedname>
        <initializer>= &quot;CamParamsFile&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="50" column="37" bodyfile="src/AIAC/Config.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a546c04ba8cb7dd9a14ecaa17cc76c9e2" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::CAM_FLIP_HORIZONTAL</definition>
        <argsstring></argsstring>
        <name>CAM_FLIP_HORIZONTAL</name>
        <qualifiedname>AIAC::Config::CAM_FLIP_HORIZONTAL</qualifiedname>
        <initializer>= &quot;CamFlipHorizontal&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="51" column="37" bodyfile="src/AIAC/Config.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a32d4acb8a460ed8941fd15290a2346e8" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::CAM_FLIP_VERTICAL</definition>
        <argsstring></argsstring>
        <name>CAM_FLIP_VERTICAL</name>
        <qualifiedname>AIAC::Config::CAM_FLIP_VERTICAL</qualifiedname>
        <initializer>= &quot;CamFlipVertical&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="52" column="37" bodyfile="src/AIAC/Config.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1aadf6e217860f2d1864c85ee74185c91f" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::AC_INFO_MODEL</definition>
        <argsstring></argsstring>
        <name>AC_INFO_MODEL</name>
        <qualifiedname>AIAC::Config::AC_INFO_MODEL</qualifiedname>
        <initializer>= &quot;ACInfoModel&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="53" column="37" bodyfile="src/AIAC/Config.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a648ab086d56e80adba6d6d5a668d13f9" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SCANNED_MODEL</definition>
        <argsstring></argsstring>
        <name>SCANNED_MODEL</name>
        <qualifiedname>AIAC::Config::SCANNED_MODEL</qualifiedname>
        <initializer>= &quot;ScannedModel&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="54" column="37" bodyfile="src/AIAC/Config.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1ac1f434a7a4b09bc536c4f1c8cc5edfd9" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::ALIGN_OFFSET</definition>
        <argsstring></argsstring>
        <name>ALIGN_OFFSET</name>
        <qualifiedname>AIAC::Config::ALIGN_OFFSET</qualifiedname>
        <initializer>= &quot;AlignOffset&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="55" column="37" bodyfile="src/AIAC/Config.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a15937d4af11e127762799211e8c1b4d4" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::ALIGN_ROTATION</definition>
        <argsstring></argsstring>
        <name>ALIGN_ROTATION</name>
        <qualifiedname>AIAC::Config::ALIGN_ROTATION</qualifiedname>
        <initializer>= &quot;AlignRotation&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="56" column="37" bodyfile="src/AIAC/Config.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1ab68d96f3deaa6c746d4aaa246cd9a7c4" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::ALIGN_FLIP</definition>
        <argsstring></argsstring>
        <name>ALIGN_FLIP</name>
        <qualifiedname>AIAC::Config::ALIGN_FLIP</qualifiedname>
        <initializer>= &quot;AlignFlip&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="57" column="37" bodyfile="src/AIAC/Config.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a3be77192e11f45d43e013d0992ab3292" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SCALE_FACTOR</definition>
        <argsstring></argsstring>
        <name>SCALE_FACTOR</name>
        <qualifiedname>AIAC::Config::SCALE_FACTOR</qualifiedname>
        <initializer>= &quot;ScaleFactor&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="58" column="37" bodyfile="src/AIAC/Config.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a60a03b6c4db8c8b2d01fd571a5ef3d61" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SEC_TSLAM</definition>
        <argsstring></argsstring>
        <name>SEC_TSLAM</name>
        <qualifiedname>AIAC::Config::SEC_TSLAM</qualifiedname>
        <initializer>= &quot;TSlam&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="61" column="37" bodyfile="src/AIAC/Config.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a256fa62174111d067644cc4ce8708ad7" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::MAP_FILE</definition>
        <argsstring></argsstring>
        <name>MAP_FILE</name>
        <qualifiedname>AIAC::Config::MAP_FILE</qualifiedname>
        <initializer>= &quot;MapFile&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="63" column="37" bodyfile="src/AIAC/Config.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a9a6e35b39d0346eafc2e7decd18df191" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::VocFile</definition>
        <argsstring></argsstring>
        <name>VocFile</name>
        <qualifiedname>AIAC::Config::VocFile</qualifiedname>
        <initializer>= &quot;VocFile&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="64" column="37" bodyfile="src/AIAC/Config.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1ab6b2d423335c5654d36767dc48160af0" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::RECONSTRUCT_CONFIG_DEFAULT_FILE</definition>
        <argsstring></argsstring>
        <name>RECONSTRUCT_CONFIG_DEFAULT_FILE</name>
        <qualifiedname>AIAC::Config::RECONSTRUCT_CONFIG_DEFAULT_FILE</qualifiedname>
        <initializer>= &quot;ReconstructConfigDefaultFile&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="65" column="37" bodyfile="src/AIAC/Config.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1aa112b44429a672994109ec8e5106320a" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SAVE_DIR_MAPS</definition>
        <argsstring></argsstring>
        <name>SAVE_DIR_MAPS</name>
        <qualifiedname>AIAC::Config::SAVE_DIR_MAPS</qualifiedname>
        <initializer>= &quot;SaveDirMaps&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="66" column="37" bodyfile="src/AIAC/Config.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1ae124b2fdf5cb641c4643a87c800259cf" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::STABILIZATION_FRAME_COUNT</definition>
        <argsstring></argsstring>
        <name>STABILIZATION_FRAME_COUNT</name>
        <qualifiedname>AIAC::Config::STABILIZATION_FRAME_COUNT</qualifiedname>
        <initializer>= &quot;SaveDirMaps&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="67" column="37" bodyfile="src/AIAC/Config.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a61c5b41c1f173bc80e86a85a74e5ef5d" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SEC_TTOOL</definition>
        <argsstring></argsstring>
        <name>SEC_TTOOL</name>
        <qualifiedname>AIAC::Config::SEC_TTOOL</qualifiedname>
        <initializer>= &quot;TTool&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="70" column="37" bodyfile="src/AIAC/Config.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a11722a73526e39e75e2b1a431e772c59" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::CONFIG_FILE</definition>
        <argsstring></argsstring>
        <name>CONFIG_FILE</name>
        <qualifiedname>AIAC::Config::CONFIG_FILE</qualifiedname>
        <initializer>= &quot;ConfigFile&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="72" column="37" bodyfile="src/AIAC/Config.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1ae9cab1be82dc64562746f279fcdc7857" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::DATASET_DIR</definition>
        <argsstring></argsstring>
        <name>DATASET_DIR</name>
        <qualifiedname>AIAC::Config::DATASET_DIR</qualifiedname>
        <initializer>= &quot;DatasetDir&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="73" column="37" bodyfile="src/AIAC/Config.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a4728829000cb853ea635e53a9ae0c021" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::TTOOL_ROOT_PATH</definition>
        <argsstring></argsstring>
        <name>TTOOL_ROOT_PATH</name>
        <qualifiedname>AIAC::Config::TTOOL_ROOT_PATH</qualifiedname>
        <initializer>= &quot;TToolRootPath&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="74" column="37" bodyfile="src/AIAC/Config.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a58e9d6c45c12ff4620986f0d7ad7b34d" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::CACHED_TOOLHEAD</definition>
        <argsstring></argsstring>
        <name>CACHED_TOOLHEAD</name>
        <qualifiedname>AIAC::Config::CACHED_TOOLHEAD</qualifiedname>
        <initializer>= &quot;CachedToolhead&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="75" column="37" bodyfile="src/AIAC/Config.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a17f67c619426347670e66c3623d6c8c6" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SEC_TOUCH_MONITOR_SPECS</definition>
        <argsstring></argsstring>
        <name>SEC_TOUCH_MONITOR_SPECS</name>
        <qualifiedname>AIAC::Config::SEC_TOUCH_MONITOR_SPECS</qualifiedname>
        <initializer>= &quot;TouchMonitorSpecs&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="78" column="37" bodyfile="src/AIAC/Config.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1ac6581e6a0c802e4b138d821b1985d502" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::NAME</definition>
        <argsstring></argsstring>
        <name>NAME</name>
        <qualifiedname>AIAC::Config::NAME</qualifiedname>
        <initializer>= &quot;Name&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="80" column="37" bodyfile="src/AIAC/Config.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1aa920f376e5c30c85314302497dac5a13" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::LINK_MODE</definition>
        <argsstring></argsstring>
        <name>LINK_MODE</name>
        <qualifiedname>AIAC::Config::LINK_MODE</qualifiedname>
        <initializer>= &quot;LinkMode&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="81" column="37" bodyfile="src/AIAC/Config.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a7ed543a2b2834e59487770edc32aae92" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::RESOLUTION</definition>
        <argsstring></argsstring>
        <name>RESOLUTION</name>
        <qualifiedname>AIAC::Config::RESOLUTION</qualifiedname>
        <initializer>= &quot;Resolution&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="82" column="37" bodyfile="src/AIAC/Config.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1abeaa31d9dccd6d4ced852d4590312537" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SEC_UTILS</definition>
        <argsstring></argsstring>
        <name>SEC_UTILS</name>
        <qualifiedname>AIAC::Config::SEC_UTILS</qualifiedname>
        <initializer>= &quot;Utils&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="86" column="37" bodyfile="src/AIAC/Config.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1ad7867b4c3c064177349e94b5424c69e0" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::UTILS_PATH</definition>
        <argsstring></argsstring>
        <name>UTILS_PATH</name>
        <qualifiedname>AIAC::Config::UTILS_PATH</qualifiedname>
        <initializer>= &quot;UtilsPath&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="88" column="37" bodyfile="src/AIAC/Config.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a992d1b8e9b9366255d2ba84e66f8e273" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::SEC_TEST</definition>
        <argsstring></argsstring>
        <name>SEC_TEST</name>
        <qualifiedname>AIAC::Config::SEC_TEST</qualifiedname>
        <initializer>= &quot;Test&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="91" column="37" bodyfile="src/AIAC/Config.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a2571637cb22c9889d0430dfd31b28d08" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string AIAC::Config::VIDEO_PATH</definition>
        <argsstring></argsstring>
        <name>VIDEO_PATH</name>
        <qualifiedname>AIAC::Config::VIDEO_PATH</qualifiedname>
        <initializer>= &quot;VideoPath&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="93" column="37" bodyfile="src/AIAC/Config.h" bodystart="93" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classAIAC_1_1Config_1a8a216b666ffd9fd5729fe4c69db22238" prot="private" static="no" mutable="no">
        <type><ref refid="classinih_1_1INIReader" kindref="compound">inih::INIReader</ref></type>
        <definition>inih::INIReader AIAC::Config::m_IniReader</definition>
        <argsstring></argsstring>
        <name>m_IniReader</name>
        <qualifiedname>AIAC::Config::m_IniReader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="190" column="21" bodyfile="src/AIAC/Config.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a67d81980cf45c02f9e8572e98b422514" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string AIAC::Config::m_Filename</definition>
        <argsstring></argsstring>
        <name>m_Filename</name>
        <qualifiedname>AIAC::Config::m_Filename</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="191" column="17" bodyfile="src/AIAC/Config.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAIAC_1_1Config_1a1a45fa61ef8a955299b5a15b29915228" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool AIAC::Config::m_UpdateFile</definition>
        <argsstring></argsstring>
        <name>m_UpdateFile</name>
        <qualifiedname>AIAC::Config::m_UpdateFile</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="192" column="10" bodyfile="src/AIAC/Config.h" bodystart="192" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classAIAC_1_1Config_1a4360e8c19e2067224f2f5540fadf4cd9" prot="private" static="yes" mutable="no">
        <type><ref refid="classAIAC_1_1Config" kindref="compound">Config</ref> *</type>
        <definition>Config * AIAC::Config::s_Instance</definition>
        <argsstring></argsstring>
        <name>s_Instance</name>
        <qualifiedname>AIAC::Config::s_Instance</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="194" column="19" bodyfile="src/AIAC/Config.h" bodystart="194" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classAIAC_1_1Config_1a70986928c124f5d928550240f6e571b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AIAC::Config::Config</definition>
        <argsstring>(std::string filename, bool updateFile=true)</argsstring>
        <name>Config</name>
        <qualifiedname>AIAC::Config::Config</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>updateFile</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="96" column="5" bodyfile="src/AIAC/Config.h" bodystart="96" bodyend="104"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classAIAC_1_1Config_1aa9f74fe43f31b770956944e61ff698d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T AIAC::Config::Get</definition>
        <argsstring>(const std::string &amp;section, const std::string &amp;name)</argsstring>
        <name>Get</name>
        <qualifiedname>AIAC::Config::Get</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="107" column="21" bodyfile="src/AIAC/Config.h" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classAIAC_1_1Config_1abbc248d506c8566ce24f96ea3f78a5da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T AIAC::Config::Get</definition>
        <argsstring>(const std::string &amp;section, const std::string &amp;name, T &amp;&amp;default_v)</argsstring>
        <name>Get</name>
        <qualifiedname>AIAC::Config::Get</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T &amp;&amp;</type>
          <declname>default_v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="119" column="21" bodyfile="src/AIAC/Config.h" bodystart="119" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classAIAC_1_1Config_1a84b1d39bfd00de0d202d6549bb1d6d0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>static std::vector&lt; T &gt; AIAC::Config::GetVector</definition>
        <argsstring>(const std::string &amp;section, const std::string &amp;name, const std::vector&lt; T &gt; &amp;default_v)</argsstring>
        <name>GetVector</name>
        <qualifiedname>AIAC::Config::GetVector</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>default_v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="132" column="31" bodyfile="src/AIAC/Config.h" bodystart="132" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classAIAC_1_1Config_1a1d8d4168b5b6486109a29e3be72c45c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>std::string</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void AIAC::Config::InsertEntry</definition>
        <argsstring>(const std::string &amp;section, const std::string &amp;name, const T &amp;v)</argsstring>
        <name>InsertEntry</name>
        <qualifiedname>AIAC::Config::InsertEntry</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="147" column="24" bodyfile="src/AIAC/Config.h" bodystart="147" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classAIAC_1_1Config_1a22323f751c176e35c6861173fa63d70f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>std::string</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void AIAC::Config::InsertEntry</definition>
        <argsstring>(const std::string &amp;section, const std::string &amp;name, const std::vector&lt; T &gt; &amp;vs)</argsstring>
        <name>InsertEntry</name>
        <qualifiedname>AIAC::Config::InsertEntry</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="156" column="24" bodyfile="src/AIAC/Config.h" bodystart="156" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classAIAC_1_1Config_1a8ee12f9bd602de8c990d7ddad1b4676d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>std::string</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void AIAC::Config::UpdateEntry</definition>
        <argsstring>(const std::string &amp;section, const std::string &amp;name, const T &amp;v)</argsstring>
        <name>UpdateEntry</name>
        <qualifiedname>AIAC::Config::UpdateEntry</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="165" column="24" bodyfile="src/AIAC/Config.h" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classAIAC_1_1Config_1a3f63df557011a41a1bf284b3e8e0958f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>std::string</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void AIAC::Config::UpdateEntry</definition>
        <argsstring>(const std::string &amp;section, const std::string &amp;name, const std::vector&lt; T &gt; &amp;vs)</argsstring>
        <name>UpdateEntry</name>
        <qualifiedname>AIAC::Config::UpdateEntry</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="174" column="24" bodyfile="src/AIAC/Config.h" bodystart="174" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classAIAC_1_1Config_1a9f5e09b855c8cdb12d180ec709109174" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void AIAC::Config::WriteToFile</definition>
        <argsstring>(std::string writeFilename=&quot;&quot;)</argsstring>
        <name>WriteToFile</name>
        <qualifiedname>AIAC::Config::WriteToFile</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>writeFilename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AIAC/Config.h" line="183" column="24" bodyfile="src/AIAC/Config.h" bodystart="183" bodyend="187"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/AIAC/Config.h" line="43" column="1" bodyfile="src/AIAC/Config.h" bodystart="44" bodyend="195"/>
    <listofallmembers>
      <member refid="classAIAC_1_1Config_1aadf6e217860f2d1864c85ee74185c91f" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>AC_INFO_MODEL</name></member>
      <member refid="classAIAC_1_1Config_1ab68d96f3deaa6c746d4aaa246cd9a7c4" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>ALIGN_FLIP</name></member>
      <member refid="classAIAC_1_1Config_1ac1f434a7a4b09bc536c4f1c8cc5edfd9" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>ALIGN_OFFSET</name></member>
      <member refid="classAIAC_1_1Config_1a15937d4af11e127762799211e8c1b4d4" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>ALIGN_ROTATION</name></member>
      <member refid="classAIAC_1_1Config_1a58e9d6c45c12ff4620986f0d7ad7b34d" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>CACHED_TOOLHEAD</name></member>
      <member refid="classAIAC_1_1Config_1a546c04ba8cb7dd9a14ecaa17cc76c9e2" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>CAM_FLIP_HORIZONTAL</name></member>
      <member refid="classAIAC_1_1Config_1a32d4acb8a460ed8941fd15290a2346e8" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>CAM_FLIP_VERTICAL</name></member>
      <member refid="classAIAC_1_1Config_1add563d383e00f3f23a148d4d8e373c94" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>CAM_ID</name></member>
      <member refid="classAIAC_1_1Config_1a79dc12d6fb8baab67e184db7c524a48e" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>CAM_PARAMS_FILE</name></member>
      <member refid="classAIAC_1_1Config_1a70986928c124f5d928550240f6e571b1" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>Config</name></member>
      <member refid="classAIAC_1_1Config_1a11722a73526e39e75e2b1a431e772c59" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>CONFIG_FILE</name></member>
      <member refid="classAIAC_1_1Config_1ae9cab1be82dc64562746f279fcdc7857" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>DATASET_DIR</name></member>
      <member refid="classAIAC_1_1Config_1aa9f74fe43f31b770956944e61ff698d9" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>Get</name></member>
      <member refid="classAIAC_1_1Config_1abbc248d506c8566ce24f96ea3f78a5da" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>Get</name></member>
      <member refid="classAIAC_1_1Config_1a84b1d39bfd00de0d202d6549bb1d6d0c" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>GetVector</name></member>
      <member refid="classAIAC_1_1Config_1a1d8d4168b5b6486109a29e3be72c45c8" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>InsertEntry</name></member>
      <member refid="classAIAC_1_1Config_1a22323f751c176e35c6861173fa63d70f" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>InsertEntry</name></member>
      <member refid="classAIAC_1_1Config_1aa920f376e5c30c85314302497dac5a13" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>LINK_MODE</name></member>
      <member refid="classAIAC_1_1Config_1a67d81980cf45c02f9e8572e98b422514" prot="private" virt="non-virtual"><scope>AIAC::Config</scope><name>m_Filename</name></member>
      <member refid="classAIAC_1_1Config_1a8a216b666ffd9fd5729fe4c69db22238" prot="private" virt="non-virtual"><scope>AIAC::Config</scope><name>m_IniReader</name></member>
      <member refid="classAIAC_1_1Config_1a1a45fa61ef8a955299b5a15b29915228" prot="private" virt="non-virtual"><scope>AIAC::Config</scope><name>m_UpdateFile</name></member>
      <member refid="classAIAC_1_1Config_1a256fa62174111d067644cc4ce8708ad7" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>MAP_FILE</name></member>
      <member refid="classAIAC_1_1Config_1ac6581e6a0c802e4b138d821b1985d502" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>NAME</name></member>
      <member refid="classAIAC_1_1Config_1ab6b2d423335c5654d36767dc48160af0" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>RECONSTRUCT_CONFIG_DEFAULT_FILE</name></member>
      <member refid="classAIAC_1_1Config_1a7ed543a2b2834e59487770edc32aae92" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>RESOLUTION</name></member>
      <member refid="classAIAC_1_1Config_1a4360e8c19e2067224f2f5540fadf4cd9" prot="private" virt="non-virtual"><scope>AIAC::Config</scope><name>s_Instance</name></member>
      <member refid="classAIAC_1_1Config_1aa112b44429a672994109ec8e5106320a" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SAVE_DIR_MAPS</name></member>
      <member refid="classAIAC_1_1Config_1a3be77192e11f45d43e013d0992ab3292" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SCALE_FACTOR</name></member>
      <member refid="classAIAC_1_1Config_1a648ab086d56e80adba6d6d5a668d13f9" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SCANNED_MODEL</name></member>
      <member refid="classAIAC_1_1Config_1a6406543adaedb33e3f7f784a1fe08734" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SEC_AIAC</name></member>
      <member refid="classAIAC_1_1Config_1a992d1b8e9b9366255d2ba84e66f8e273" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SEC_TEST</name></member>
      <member refid="classAIAC_1_1Config_1a17f67c619426347670e66c3623d6c8c6" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SEC_TOUCH_MONITOR_SPECS</name></member>
      <member refid="classAIAC_1_1Config_1a60a03b6c4db8c8b2d01fd571a5ef3d61" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SEC_TSLAM</name></member>
      <member refid="classAIAC_1_1Config_1a61c5b41c1f173bc80e86a85a74e5ef5d" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SEC_TTOOL</name></member>
      <member refid="classAIAC_1_1Config_1abeaa31d9dccd6d4ced852d4590312537" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>SEC_UTILS</name></member>
      <member refid="classAIAC_1_1Config_1ae124b2fdf5cb641c4643a87c800259cf" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>STABILIZATION_FRAME_COUNT</name></member>
      <member refid="classAIAC_1_1Config_1a4728829000cb853ea635e53a9ae0c021" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>TTOOL_ROOT_PATH</name></member>
      <member refid="classAIAC_1_1Config_1a8ee12f9bd602de8c990d7ddad1b4676d" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>UpdateEntry</name></member>
      <member refid="classAIAC_1_1Config_1a3f63df557011a41a1bf284b3e8e0958f" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>UpdateEntry</name></member>
      <member refid="classAIAC_1_1Config_1ad7867b4c3c064177349e94b5424c69e0" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>UTILS_PATH</name></member>
      <member refid="classAIAC_1_1Config_1a2571637cb22c9889d0430dfd31b28d08" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>VIDEO_PATH</name></member>
      <member refid="classAIAC_1_1Config_1a9a6e35b39d0346eafc2e7decd18df191" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>VocFile</name></member>
      <member refid="classAIAC_1_1Config_1a9f5e09b855c8cdb12d180ec709109174" prot="public" virt="non-virtual"><scope>AIAC::Config</scope><name>WriteToFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
