<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="CutPlaneVisualizer_8cpp" kind="file" language="C++">
    <compoundname>CutPlaneVisualizer.cpp</compoundname>
    <includes refid="Application_8h" local="yes">AIAC/Application.h</includes>
    <includes refid="FabFeedback_8h" local="yes">FabFeedback.h</includes>
    <includes refid="CutPlaneVisualizer_8h" local="yes">CutPlaneVisualizer.h</includes>
    <incdepgraph>
      <node id="57">
        <label>ACInfoModel.h</label>
        <link refid="ACInfoModel_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>AIAC/ACInfoToolhead.h</label>
        <link refid="ACInfoToolhead_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>AIAC/ACInfoToolheadManager.h</label>
        <link refid="ACInfoToolheadManager_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AIAC/Application.h</label>
        <link refid="Application_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>AIAC/Assert.h</label>
        <link refid="Assert_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>AIAC/Base.h</label>
        <link refid="Base_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>AIAC/Camera.h</label>
        <link refid="Camera_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>AIAC/Config.h</label>
        <link refid="Config_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>AIAC/EventSys/ApplicationEvent.h</label>
        <link refid="ApplicationEvent_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>AIAC/EventSys/CameraEvent.h</label>
        <link refid="CameraEvent_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>AIAC/EventSys/Event.h</label>
        <link refid="Event_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>AIAC/EventSys/EventBus.h</label>
        <link refid="EventBus_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>AIAC/EventSys/SLAMEvent.h</label>
        <link refid="SLAMEvent_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>CutBladeThicknessVisualizer.h</label>
        <link refid="CutBladeThicknessVisualizer_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>AIAC/Feedback/CutChainSawFeedback.h</label>
        <link refid="CutChainSawFeedback_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>AIAC/Feedback/CutCircularSawFeedback.h</label>
        <link refid="CutCircularSawFeedback_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/AIAC/Feedback/CutPlaneVisualizer.cpp</label>
        <link refid="CutPlaneVisualizer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>AIAC/Feedback/CutPlaneVisualizer.h</label>
        <link refid="CutPlaneVisualizer_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>AIAC/Feedback/FabFeedback.h</label>
        <link refid="FabFeedback_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>FeedbackVisualizer.h</label>
        <link refid="FeedbackVisualizer_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>AIAC/Feedback/HoleFeedback.h</label>
        <link refid="HoleFeedback_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>AIAC/GOSys/GO.h</label>
        <link refid="GO_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>GOSys/GOPrimitive.h</label>
        <link refid="GOPrimitive_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>AIAC/GOSys/GORegistry.h</label>
        <link refid="GORegistry_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>GlHeader.h</label>
        <link refid="GlHeader_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>AIAC/Image.h</label>
        <link refid="Image_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>AIAC/Layer.h</label>
        <link refid="Layer_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>AIAC/LayerCamera.h</label>
        <link refid="LayerCamera_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>AIAC/LayerFeedback.h</label>
        <link refid="LayerFeedback_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>AIAC/LayerModel.h</label>
        <link refid="LayerModel_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>AIAC/LayerSlam.h</label>
        <link refid="LayerSlam_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>AIAC/LayerToolhead.h</label>
        <link refid="LayerToolhead_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>AIAC/Log.h</label>
        <link refid="Log_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>AIAC/Render/GLObject.h</label>
        <link refid="GLObject_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>AIAC/Render/Renderer.h</label>
        <link refid="Renderer_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>AIAC/Render/Viewport.h</label>
        <link refid="Viewport_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>ScannedModel.h</label>
        <link refid="ScannedModel_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>AIAC/TouchMonitor.h</label>
        <link refid="TouchMonitor_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>AIAC/Window.h</label>
        <link refid="Window_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>utils/CircularBuffer.h</label>
        <link refid="CircularBuffer_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>utils/GeometryUtils.h</label>
        <link refid="utils_2GeometryUtils_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>utils/Ini.h</label>
        <link refid="Ini_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>GL/freeglut.h</label>
      </node>
      <node id="7">
        <label>GL/glew.h</label>
      </node>
      <node id="9">
        <label>GL/glut.h</label>
      </node>
      <node id="10">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="41">
        <label>algorithm</label>
      </node>
      <node id="13">
        <label>backends/imgui_impl_glfw.h</label>
      </node>
      <node id="14">
        <label>backends/imgui_impl_opengl3.h</label>
      </node>
      <node id="42">
        <label>cctype</label>
      </node>
      <node id="43">
        <label>cstdlib</label>
      </node>
      <node id="37">
        <label>ctype.h</label>
      </node>
      <node id="79">
        <label>eventpp/eventdispatcher.h</label>
      </node>
      <node id="80">
        <label>eventpp/eventpolicies.h</label>
      </node>
      <node id="78">
        <label>eventpp/eventqueue.h</label>
      </node>
      <node id="44">
        <label>fstream</label>
      </node>
      <node id="11">
        <label>glm/glm.hpp</label>
      </node>
      <node id="32">
        <label>glm/gtc/constants.hpp</label>
      </node>
      <node id="28">
        <label>glm/gtc/type_ptr.hpp</label>
      </node>
      <node id="31">
        <label>glm/gtx/norm.hpp</label>
      </node>
      <node id="60">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="12">
        <label>imgui.h</label>
      </node>
      <node id="30">
        <label>iostream</label>
      </node>
      <node id="45">
        <label>iterator</label>
      </node>
      <node id="46">
        <label>map</label>
      </node>
      <node id="53">
        <label>memory</label>
      </node>
      <node id="52">
        <label>mutex</label>
      </node>
      <node id="58">
        <label>pugixml.hpp</label>
      </node>
      <node id="47">
        <label>set</label>
      </node>
      <node id="17">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="16">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="48">
        <label>sstream</label>
      </node>
      <node id="54">
        <label>stdexcept</label>
      </node>
      <node id="38">
        <label>stdio.h</label>
      </node>
      <node id="35">
        <label>string</label>
      </node>
      <node id="39">
        <label>string.h</label>
      </node>
      <node id="40">
        <label>sys/stat.h</label>
      </node>
      <node id="33">
        <label>tslam.h</label>
      </node>
      <node id="66">
        <label>ttool.hh</label>
      </node>
      <node id="49">
        <label>type_traits</label>
      </node>
      <node id="50">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceAIAC">AIAC</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>#####################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;<sp/>BEGINNING<sp/>OF<sp/>LEGAL<sp/>NOTICE<sp/>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//######################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>source<sp/>file,<sp/>along<sp/>with<sp/>its<sp/>associated<sp/>content,<sp/>was<sp/>authored<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Andrea<sp/>Settimi,<sp/>Hong-Bin<sp/>Yang,<sp/>Naravich<sp/>Chutisilp,<sp/>and<sp/>numerous<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors.<sp/>The<sp/>code<sp/>was<sp/>originally<sp/>developed<sp/>at<sp/>the<sp/>Laboratory<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Timber<sp/>Construction<sp/>(IBOIS,<sp/>director:<sp/>Prof.<sp/>Yves<sp/>Weinand)<sp/>at<sp/>the<sp/>School<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Architecture,<sp/>Civil<sp/>and<sp/>Environmental<sp/>Engineering<sp/>(ENAC)<sp/>at<sp/>the<sp/>Swiss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Federal<sp/>Institute<sp/>of<sp/>Technology<sp/>in<sp/>Lausanne<sp/>(EPFL)<sp/>for<sp/>the<sp/>Doctoral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Research<sp/>&quot;Augmented<sp/>Carpentry&quot;<sp/>(PhD<sp/>researcher:<sp/>Andrea<sp/>Settimi,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>co-director:<sp/>Dr.<sp/>Julien<sp/>Gamerro,<sp/>director:<sp/>Prof.<sp/>Yves<sp/>Weinand).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Although<sp/>the<sp/>entire<sp/>repository<sp/>is<sp/>distributed<sp/>under<sp/>the<sp/>GPL<sp/>license,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>particular<sp/>source<sp/>files<sp/>may<sp/>also<sp/>be<sp/>used<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIT<sp/>license.<sp/>By<sp/>accessing<sp/>or<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>You<sp/>may<sp/>reproduce,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>file<sp/>in<sp/>accordance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>with<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>You<sp/>must<sp/>retain<sp/>this<sp/>legal<sp/>notice<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>portions<sp/>of<sp/>this<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>This<sp/>file<sp/>is<sp/>provided<sp/>&quot;AS<sp/>IS,&quot;<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>warranties,<sp/>including<sp/>but<sp/>not<sp/>limited<sp/>to<sp/>the<sp/>implied<sp/>warranties<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>merchantability<sp/>and<sp/>fitness<sp/>for<sp/>a<sp/>particular<sp/>purpose.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>cannot<sp/>or<sp/>will<sp/>not<sp/>comply<sp/>with<sp/>the<sp/>above<sp/>conditions,<sp/>you<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>permitted<sp/>to<sp/>use<sp/>this<sp/>file.<sp/>By<sp/>proceeding,<sp/>you<sp/>acknowledge<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>accept<sp/>all<sp/>terms<sp/>and<sp/>conditions<sp/>herein.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//######################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<sp/>END<sp/>OF<sp/>LEGAL<sp/>NOTICE<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#####################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AIAC/Application.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FabFeedback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CutPlaneVisualizer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">AIAC</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>CutPlaneVisualizer::CutPlaneVisualizer(){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref><sp/>=<sp/>GOLine::Add(GOPoint(0.f,<sp/>0.f,<sp/>0.f),<sp/>GOPoint(0.f,<sp/>0.f,<sp/>0.f));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a7c9cfac6f6200125639c37147132d99e" kindref="member">m_LongestIntersectSegmentA1</ref><sp/>=<sp/>GOLine::Add(GOPoint(0.f,<sp/>0.f,<sp/>0.f),<sp/>GOPoint(0.f,<sp/>0.f,<sp/>0.f));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1ad629650a9d20f1220a171ae923798790" kindref="member">m_LongestIntersectSegmentA2</ref><sp/>=<sp/>GOLine::Add(GOPoint(0.f,<sp/>0.f,<sp/>0.f),<sp/>GOPoint(0.f,<sp/>0.f,<sp/>0.f));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref><sp/>=<sp/>GOLine::Add(GOPoint(0.f,<sp/>0.f,<sp/>0.f),<sp/>GOPoint(0.f,<sp/>0.f,<sp/>0.f));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref><sp/>=<sp/>GOLine::Add(GOPoint(0.f,<sp/>0.f,<sp/>0.f),<sp/>GOPoint(0.f,<sp/>0.f,<sp/>0.f));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2<sp/>=<sp/>GOLine::Add(GOPoint(0.f,<sp/>0.f,<sp/>0.f),<sp/>GOPoint(0.f,<sp/>0.f,<sp/>0.f));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetWeight(GOWeight::Light);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetWeight(GOWeight::Light);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a7c9cfac6f6200125639c37147132d99e" kindref="member">m_LongestIntersectSegmentA1</ref>-&gt;SetWeight(GOWeight::Light);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1ad629650a9d20f1220a171ae923798790" kindref="member">m_LongestIntersectSegmentA2</ref>-&gt;SetWeight(GOWeight::Light);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref>-&gt;SetColor(AIAC::GOColor::CYAN);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a7c9cfac6f6200125639c37147132d99e" kindref="member">m_LongestIntersectSegmentA1</ref>-&gt;SetColor(AIAC::GOColor::MAGENTA);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1ad629650a9d20f1220a171ae923798790" kindref="member">m_LongestIntersectSegmentA2</ref>-&gt;SetColor(AIAC::GOColor::MAGENTA);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetColor(AIAC::GOColor::CYAN);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetColor(AIAC::GOColor::MAGENTA);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetColor(AIAC::GOColor::MAGENTA);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AllPrimitives.push_back(<ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AllPrimitives.push_back(<ref refid="classAIAC_1_1CutPlaneVisualizer_1a7c9cfac6f6200125639c37147132d99e" kindref="member">m_LongestIntersectSegmentA1</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AllPrimitives.push_back(<ref refid="classAIAC_1_1CutPlaneVisualizer_1ad629650a9d20f1220a171ae923798790" kindref="member">m_LongestIntersectSegmentA2</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AllPrimitives.push_back(<ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AllPrimitives.push_back(<ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AllPrimitives.push_back(m_LongestIntersectSegmentB2);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deactivate();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CutPlaneVisualizer::ReorderIntersectPoints(std::vector&lt;glm::vec3&gt;&amp;<sp/>intersectPts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glm::vec3&amp;<sp/>facePt)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reorder<sp/>intersect<sp/>points<sp/>based<sp/>on<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vec0<sp/>=<sp/>intersectPts[0]<sp/>-<sp/>intersectPts[3];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vec1<sp/>=<sp/>intersectPts[1]<sp/>-<sp/>intersectPts[3];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vec2<sp/>=<sp/>intersectPts[2]<sp/>-<sp/>intersectPts[3];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>angle01<sp/>=<sp/>GetAngleBetweenVectors(vec0,<sp/>vec1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>angle02<sp/>=<sp/>GetAngleBetweenVectors(vec0,<sp/>vec2);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>angle12<sp/>=<sp/>GetAngleBetweenVectors(vec1,<sp/>vec2);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(angle01<sp/>&gt;<sp/>angle02<sp/>&amp;&amp;<sp/>angle01<sp/>&gt;<sp/>angle12)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>2<sp/>1<sp/>---<sp/>3<sp/>=&gt;<sp/>swap<sp/>1<sp/>and<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(intersectPts[1],<sp/>intersectPts[2]);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(angle12<sp/>&gt;<sp/>angle01<sp/>&amp;&amp;<sp/>angle12<sp/>&gt;<sp/>angle02)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>1<sp/>0<sp/>2<sp/>---<sp/>3<sp/>=&gt;<sp/>swap<sp/>0<sp/>and<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(intersectPts[0],<sp/>intersectPts[1]);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>midpoints<sp/>of<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>m_SegmentMid1<sp/>=<sp/>(intersectPts[0]<sp/>+<sp/>intersectPts[1])<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>m_SegmentMid2<sp/>=<sp/>(intersectPts[1]<sp/>+<sp/>intersectPts[2])<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>m_SegmentMid3<sp/>=<sp/>(intersectPts[2]<sp/>+<sp/>intersectPts[3])<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>m_SegmentMid4<sp/>=<sp/>(intersectPts[3]<sp/>+<sp/>intersectPts[0])<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>distances<sp/>from<sp/>face<sp/>point<sp/>to<sp/>midpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>facePtToMid1<sp/>=<sp/>m_SegmentMid1<sp/>-<sp/>facePt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>facePtToMid2<sp/>=<sp/>m_SegmentMid2<sp/>-<sp/>facePt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>facePtToMid3<sp/>=<sp/>m_SegmentMid3<sp/>-<sp/>facePt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>facePtToMid4<sp/>=<sp/>m_SegmentMid4<sp/>-<sp/>facePt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist1<sp/>=<sp/>glm::length(facePtToMid1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist2<sp/>=<sp/>glm::length(facePtToMid2);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist3<sp/>=<sp/>glm::length(facePtToMid3);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist4<sp/>=<sp/>glm::length(facePtToMid4);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CutPlaneVisualizer::CutPlaneVisualizer::Activate(){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FeedbackVisualizer::Activate();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CutPlaneVisualizer::CutPlaneVisualizer::Deactivate(){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FeedbackVisualizer::Deactivate();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p<sp/>:<sp/>m_AllPrimitives)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;SetVisibility(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;glm::vec3&gt;<sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1aced21fba3bc8a5fc68f4c5deff270f0a" kindref="member">CutPlaneVisualizer::Update</ref>(glm::vec3<sp/>faceNorm,<sp/>glm::vec3<sp/>facePt){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimberInfo::Cut*<sp/>cut<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TimberInfo::Cut*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(AC_FF_COMP);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getting<sp/>the<sp/>scanned<sp/>model<sp/>bounding<sp/>box<sp/>and<sp/>its<sp/>edges<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bbox<sp/>=<sp/>AIAC_APP.GetLayer&lt;LayerModel&gt;()-&gt;GetScannedModel().GetBoundingBox();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bboxIndices<sp/>=<sp/>AIAC_APP.GetLayer&lt;LayerModel&gt;()-&gt;GetScannedModel().GetBboxEdgesIndices();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>tool<sp/>type<sp/>and<sp/>its<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currentToolType<sp/>=<sp/>AIAC_APP.GetLayer&lt;LayerToolhead&gt;()-&gt;ACInfoToolheadManager-&gt;GetActiveToolheadType();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normStart;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normEnd;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentToolType<sp/>==<sp/>ACToolHeadType::CHAINSAW)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStart<sp/>=<sp/>AC_FF_TOOL-&gt;GetData&lt;ChainSawData&gt;().NormStartGO-&gt;GetPosition();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normEnd<sp/>=<sp/>AC_FF_TOOL-&gt;GetData&lt;ChainSawData&gt;().NormEndGO-&gt;GetPosition();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentToolType<sp/>==<sp/>ACToolHeadType::CIRCULARSAW)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStart<sp/>=<sp/>AC_FF_TOOL-&gt;GetData&lt;CircularSawData&gt;().CenterGO-&gt;GetPosition();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normEnd<sp/>=<sp/>AC_FF_TOOL-&gt;GetData&lt;CircularSawData&gt;().NormEndGO-&gt;GetPosition();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>translate<sp/>the<sp/>facePt<sp/>and<sp/>faceNorm<sp/>with<sp/>the<sp/>thickness<sp/>of<sp/>the<sp/>blade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bladeThicknessScaled;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>overHangThicknessScaled;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentToolType<sp/>==<sp/>ACToolHeadType::CHAINSAW)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bladeThicknessScaled<sp/>=<sp/>AC_FF_TOOL-&gt;GetData&lt;ChainSawData&gt;().ThicknessACIT;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overHangThicknessScaled<sp/>=<sp/>AC_FF_TOOL-&gt;GetData&lt;ChainSawData&gt;().OverhangACIT;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentToolType<sp/>==<sp/>ACToolHeadType::CIRCULARSAW)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bladeThicknessScaled<sp/>=<sp/>AC_FF_TOOL-&gt;GetData&lt;CircularSawData&gt;().ThicknessACIT;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overHangThicknessScaled<sp/>=<sp/>AC_FF_TOOL-&gt;GetData&lt;CircularSawData&gt;().OverhangACIT;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normalVec<sp/>=<sp/>glm::normalize(normEnd<sp/>-<sp/>normStart);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>oppositeNormalVec<sp/>=<sp/>-normalVec;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>displacementTowardsCamera<sp/>=<sp/>overHangThicknessScaled;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>displacementAwayFromCamera<sp/>=<sp/>bladeThicknessScaled<sp/>-<sp/>overHangThicknessScaled;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>displacementTowardsCameraVec<sp/>=<sp/>displacementTowardsCamera<sp/>*<sp/>normalVec;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>displacementAwayFromCameraVec<sp/>=<sp/>displacementAwayFromCamera<sp/>*<sp/>oppositeNormalVec;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normStartTC<sp/>=<sp/>normStart<sp/>+<sp/>displacementTowardsCameraVec;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normStartAC<sp/>=<sp/>normStart<sp/>+<sp/>displacementAwayFromCameraVec;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normEndTC<sp/>=<sp/>normEnd<sp/>+<sp/>displacementTowardsCameraVec;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normEndAC<sp/>=<sp/>normEnd<sp/>+<sp/>displacementAwayFromCameraVec;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normTC<sp/>=<sp/>glm::normalize(normEndTC<sp/>-<sp/>normStartTC);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>normAC<sp/>=<sp/>glm::normalize(normEndAC<sp/>-<sp/>normStartAC);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;glm::vec3&gt;<sp/>intersectPtsTowardsCamera;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;glm::vec3&gt;<sp/>intersectPtsAwayFromCamera;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;glm::vec3&gt;<sp/>intersectPts;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[i,<sp/>j]<sp/>:<sp/>bboxIndices)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>intersectPt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetIntersectPointOfLineSegAndPlane(bbox[i],<sp/>bbox[j],<sp/>faceNorm,<sp/>facePt,<sp/>intersectPt)){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectPts.push_back(intersectPt);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>intersectPtTC;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetIntersectPointOfLineSegAndPlane(bbox[i],<sp/>bbox[j],<sp/>normTC,<sp/>normStartTC,<sp/>intersectPtTC)){</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectPtsTowardsCamera.push_back(intersectPtTC);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>intersectPtAC;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetIntersectPointOfLineSegAndPlane(bbox[i],<sp/>bbox[j],<sp/>normAC,<sp/>normStartAC,<sp/>intersectPtAC)){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectPtsAwayFromCamera.push_back(intersectPtAC);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersectPts.size()<sp/>!=<sp/>4</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>intersectPtsTowardsCamera.size()<sp/>!=<sp/>4</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>intersectPtsAwayFromCamera.size()<sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;glm::vec3&gt;();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ReorderIntersectPoints(intersectPts,<sp/>facePt);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ReorderIntersectPoints(intersectPtsTowardsCamera,<sp/>normTC);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ReorderIntersectPoints(intersectPtsAwayFromCamera,<sp/>normAC);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>closest<sp/>segment<sp/>to<sp/>the<sp/>toolhead&apos;s<sp/>face<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>m_SegmentMid1<sp/>=<sp/>(intersectPts[0]<sp/>+<sp/>intersectPts[1])<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>m_SegmentMid2<sp/>=<sp/>(intersectPts[1]<sp/>+<sp/>intersectPts[2])<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>m_SegmentMid3<sp/>=<sp/>(intersectPts[2]<sp/>+<sp/>intersectPts[3])<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>m_SegmentMid4<sp/>=<sp/>(intersectPts[3]<sp/>+<sp/>intersectPts[0])<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>facePtToMid1<sp/>=<sp/>m_SegmentMid1<sp/>-<sp/>facePt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>facePtToMid2<sp/>=<sp/>m_SegmentMid2<sp/>-<sp/>facePt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>facePtToMid3<sp/>=<sp/>m_SegmentMid3<sp/>-<sp/>facePt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>facePtToMid4<sp/>=<sp/>m_SegmentMid4<sp/>-<sp/>facePt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist1<sp/>=<sp/>glm::length(facePtToMid1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist2<sp/>=<sp/>glm::length(facePtToMid2);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist3<sp/>=<sp/>glm::length(facePtToMid3);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist4<sp/>=<sp/>glm::length(facePtToMid4);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>closestMidPt;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist1<sp/>&lt;<sp/>dist2<sp/>&amp;&amp;<sp/>dist1<sp/>&lt;<sp/>dist3<sp/>&amp;&amp;<sp/>dist1<sp/>&lt;<sp/>dist4)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestMidPt<sp/>=<sp/>m_SegmentMid1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref>-&gt;SetPts(intersectPts[0],<sp/>intersectPts[1]);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a7c9cfac6f6200125639c37147132d99e" kindref="member">m_LongestIntersectSegmentA1</ref>-&gt;SetPts(intersectPtsTowardsCamera[0],<sp/>intersectPtsTowardsCamera[1]);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1ad629650a9d20f1220a171ae923798790" kindref="member">m_LongestIntersectSegmentA2</ref>-&gt;SetPts(intersectPtsAwayFromCamera[0],<sp/>intersectPtsAwayFromCamera[1]);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>closest<sp/>between<sp/>2<sp/>and<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>dist4)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetPts(intersectPts[1],<sp/>intersectPts[2]);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetPts(intersectPtsTowardsCamera[1],<sp/>intersectPtsTowardsCamera[2]);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetPts(intersectPtsAwayFromCamera[1],<sp/>intersectPtsAwayFromCamera[2]);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetPts(intersectPts[3],<sp/>intersectPts[0]);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetPts(intersectPtsTowardsCamera[3],<sp/>intersectPtsTowardsCamera[0]);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetPts(intersectPtsAwayFromCamera[3],<sp/>intersectPtsAwayFromCamera[0]);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>dist1<sp/>&amp;&amp;<sp/>dist2<sp/>&lt;<sp/>dist3<sp/>&amp;&amp;<sp/>dist2<sp/>&lt;<sp/>dist4)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestMidPt<sp/>=<sp/>m_SegmentMid2;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref>-&gt;SetPts(intersectPts[1],<sp/>intersectPts[2]);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a7c9cfac6f6200125639c37147132d99e" kindref="member">m_LongestIntersectSegmentA1</ref>-&gt;SetPts(intersectPtsTowardsCamera[1],<sp/>intersectPtsTowardsCamera[2]);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1ad629650a9d20f1220a171ae923798790" kindref="member">m_LongestIntersectSegmentA2</ref>-&gt;SetPts(intersectPtsAwayFromCamera[1],<sp/>intersectPtsAwayFromCamera[2]);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist1<sp/>&lt;<sp/>dist3)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetPts(intersectPts[0],<sp/>intersectPts[1]);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetPts(intersectPtsTowardsCamera[0],<sp/>intersectPtsTowardsCamera[1]);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetPts(intersectPtsAwayFromCamera[0],<sp/>intersectPtsAwayFromCamera[1]);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetPts(intersectPts[2],<sp/>intersectPts[3]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetPts(intersectPtsTowardsCamera[2],<sp/>intersectPtsTowardsCamera[3]);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetPts(intersectPtsAwayFromCamera[2],<sp/>intersectPtsAwayFromCamera[3]);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist3<sp/>&lt;<sp/>dist1<sp/>&amp;&amp;<sp/>dist3<sp/>&lt;<sp/>dist2<sp/>&amp;&amp;<sp/>dist3<sp/>&lt;<sp/>dist4)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestMidPt<sp/>=<sp/>m_SegmentMid3;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref>-&gt;SetPts(intersectPts[2],<sp/>intersectPts[3]);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a7c9cfac6f6200125639c37147132d99e" kindref="member">m_LongestIntersectSegmentA1</ref>-&gt;SetPts(intersectPtsTowardsCamera[2],<sp/>intersectPtsTowardsCamera[3]);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1ad629650a9d20f1220a171ae923798790" kindref="member">m_LongestIntersectSegmentA2</ref>-&gt;SetPts(intersectPtsAwayFromCamera[2],<sp/>intersectPtsAwayFromCamera[3]);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>dist4)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetPts(intersectPts[1],<sp/>intersectPts[2]);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetPts(intersectPtsTowardsCamera[1],<sp/>intersectPtsTowardsCamera[2]);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetPts(intersectPtsAwayFromCamera[1],<sp/>intersectPtsAwayFromCamera[2]);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetPts(intersectPts[3],<sp/>intersectPts[0]);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetPts(intersectPtsTowardsCamera[3],<sp/>intersectPtsTowardsCamera[0]);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetPts(intersectPtsAwayFromCamera[3],<sp/>intersectPtsAwayFromCamera[0]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestMidPt<sp/>=<sp/>m_SegmentMid4;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref>-&gt;SetPts(intersectPts[3],<sp/>intersectPts[0]);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a7c9cfac6f6200125639c37147132d99e" kindref="member">m_LongestIntersectSegmentA1</ref>-&gt;SetPts(intersectPtsTowardsCamera[3],<sp/>intersectPtsTowardsCamera[0]);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1ad629650a9d20f1220a171ae923798790" kindref="member">m_LongestIntersectSegmentA2</ref>-&gt;SetPts(intersectPtsAwayFromCamera[3],<sp/>intersectPtsAwayFromCamera[0]);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist1<sp/>&lt;<sp/>dist3)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetPts(intersectPts[0],<sp/>intersectPts[1]);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetPts(intersectPtsTowardsCamera[0],<sp/>intersectPtsTowardsCamera[1]);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetPts(intersectPtsAwayFromCamera[0],<sp/>intersectPtsAwayFromCamera[1]);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetPts(intersectPts[2],<sp/>intersectPts[3]);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1af0733286377b8fd69254df3d8e05b3f6" kindref="member">m_LongestIntersectSegmentB1</ref>-&gt;SetPts(intersectPtsTowardsCamera[2],<sp/>intersectPtsTowardsCamera[3]);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LongestIntersectSegmentB2-&gt;SetPts(intersectPtsAwayFromCamera[2],<sp/>intersectPtsAwayFromCamera[3]);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref>-&gt;ExtendBothEnds(2.f);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;ExtendBothEnds(2.f);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a2e20f891e73ee4fc79ea8810af8a5ecd" kindref="member">m_LongestIntersectSegmentAppCenterA</ref>-&gt;SetVisibility(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAIAC_1_1CutPlaneVisualizer_1a703660ef4e39310563eadeaebb0fd4db" kindref="member">m_LongestIntersectSegmentAppCenterB</ref>-&gt;SetVisibility(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intersectPts;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/AIAC/Feedback/CutPlaneVisualizer.cpp"/>
  </compounddef>
</doxygen>
